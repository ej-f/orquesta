# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file './ui/mainwindow.ui'
#
# Created: Fri Jul  7 11:51:14 2017
#      by: PyQt4 UI code generator 4.11.3
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName(_fromUtf8("MainWindow"))
        MainWindow.resize(606, 584)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMaximumSize(QtCore.QSize(700, 800))
        MainWindow.setBaseSize(QtCore.QSize(0, 0))
        self.centralwidget = QtGui.QWidget(MainWindow)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName(_fromUtf8("centralwidget"))
        self.horizontalLayout = QtGui.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setMargin(4)
        self.horizontalLayout.setObjectName(_fromUtf8("horizontalLayout"))
        self.splitter_2 = QtGui.QSplitter(self.centralwidget)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.splitter_2.sizePolicy().hasHeightForWidth())
        self.splitter_2.setSizePolicy(sizePolicy)
        self.splitter_2.setAutoFillBackground(False)
        self.splitter_2.setFrameShadow(QtGui.QFrame.Plain)
        self.splitter_2.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_2.setObjectName(_fromUtf8("splitter_2"))
        self.splitter = QtGui.QSplitter(self.splitter_2)
        self.splitter.setSizeIncrement(QtCore.QSize(0, 0))
        self.splitter.setBaseSize(QtCore.QSize(100, 0))
        self.splitter.setFrameShape(QtGui.QFrame.NoFrame)
        self.splitter.setLineWidth(1)
        self.splitter.setMidLineWidth(0)
        self.splitter.setOrientation(QtCore.Qt.Vertical)
        self.splitter.setHandleWidth(1)
        self.splitter.setObjectName(_fromUtf8("splitter"))
        self.groupbox_terminals = QtGui.QGroupBox(self.splitter)
        self.groupbox_terminals.setEnabled(True)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.MinimumExpanding, QtGui.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupbox_terminals.sizePolicy().hasHeightForWidth())
        self.groupbox_terminals.setSizePolicy(sizePolicy)
        self.groupbox_terminals.setMinimumSize(QtCore.QSize(100, 0))
        self.groupbox_terminals.setMaximumSize(QtCore.QSize(120, 16777215))
        self.groupbox_terminals.setFlat(True)
        self.groupbox_terminals.setObjectName(_fromUtf8("groupbox_terminals"))
        self.verticalLayout = QtGui.QVBoxLayout(self.groupbox_terminals)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setMargin(4)
        self.verticalLayout.setObjectName(_fromUtf8("verticalLayout"))
        self.listwidget = OrListWidget(self.groupbox_terminals)
        self.listwidget.setObjectName(_fromUtf8("listwidget"))
        self.verticalLayout.addWidget(self.listwidget)
        self.groupbox_cwd = QtGui.QGroupBox(self.splitter)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.MinimumExpanding, QtGui.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.groupbox_cwd.sizePolicy().hasHeightForWidth())
        self.groupbox_cwd.setSizePolicy(sizePolicy)
        self.groupbox_cwd.setMinimumSize(QtCore.QSize(100, 0))
        self.groupbox_cwd.setMaximumSize(QtCore.QSize(120, 16777215))
        self.groupbox_cwd.setSizeIncrement(QtCore.QSize(0, 0))
        self.groupbox_cwd.setFlat(True)
        self.groupbox_cwd.setObjectName(_fromUtf8("groupbox_cwd"))
        self.verticalLayout_2 = QtGui.QVBoxLayout(self.groupbox_cwd)
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setMargin(4)
        self.verticalLayout_2.setObjectName(_fromUtf8("verticalLayout_2"))
        self.logslistview = OrLogsListView(self.groupbox_cwd)
        self.logslistview.setObjectName(_fromUtf8("logslistview"))
        self.verticalLayout_2.addWidget(self.logslistview)
        self.sciscintilla = OrSciScintilla(self.splitter_2)
        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sciscintilla.sizePolicy().hasHeightForWidth())
        self.sciscintilla.setSizePolicy(sizePolicy)
        self.sciscintilla.setObjectName(_fromUtf8("sciscintilla"))
        self.horizontalLayout.addWidget(self.splitter_2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtGui.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 606, 18))
        self.menubar.setDefaultUp(False)
        self.menubar.setNativeMenuBar(True)
        self.menubar.setObjectName(_fromUtf8("menubar"))
        self.menu_project = QtGui.QMenu(self.menubar)
        self.menu_project.setSeparatorsCollapsible(True)
        self.menu_project.setObjectName(_fromUtf8("menu_project"))
        self.menu_operation = QtGui.QMenu(self.menubar)
        self.menu_operation.setObjectName(_fromUtf8("menu_operation"))
        self.menu_help = QtGui.QMenu(self.menubar)
        self.menu_help.setObjectName(_fromUtf8("menu_help"))
        self.menu_selection = QtGui.QMenu(self.menubar)
        self.menu_selection.setObjectName(_fromUtf8("menu_selection"))
        self.menu_templates = QtGui.QMenu(self.menubar)
        self.menu_templates.setObjectName(_fromUtf8("menu_templates"))
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtGui.QStatusBar(MainWindow)
        self.statusbar.setObjectName(_fromUtf8("statusbar"))
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtGui.QToolBar(MainWindow)
        self.toolBar.setIconSize(QtCore.QSize(28, 28))
        self.toolBar.setFloatable(True)
        self.toolBar.setObjectName(_fromUtf8("toolBar"))
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.action_save = QtGui.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8(":/toolbar/img/save.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_save.setIcon(icon)
        self.action_save.setObjectName(_fromUtf8("action_save"))
        self.action_exit = QtGui.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(_fromUtf8(":/toolbar/img/exit.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_exit.setIcon(icon1)
        self.action_exit.setObjectName(_fromUtf8("action_exit"))
        self.action_select_all = QtGui.QAction(MainWindow)
        self.action_select_all.setCheckable(False)
        self.action_select_all.setShortcutContext(QtCore.Qt.WindowShortcut)
        self.action_select_all.setObjectName(_fromUtf8("action_select_all"))
        self.action_unselect_all = QtGui.QAction(MainWindow)
        self.action_unselect_all.setObjectName(_fromUtf8("action_unselect_all"))
        self.action_about = QtGui.QAction(MainWindow)
        self.action_about.setObjectName(_fromUtf8("action_about"))
        self.action_open_terminals = QtGui.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(_fromUtf8(":/toolbar/img/remote.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_open_terminals.setIcon(icon2)
        self.action_open_terminals.setObjectName(_fromUtf8("action_open_terminals"))
        self.action_send_move_next = QtGui.QAction(MainWindow)
        self.action_send_move_next.setObjectName(_fromUtf8("action_send_move_next"))
        self.action_send = QtGui.QAction(MainWindow)
        self.action_send.setObjectName(_fromUtf8("action_send"))
        self.action_new = QtGui.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(_fromUtf8(":/toolbar/img/new.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_new.setIcon(icon3)
        self.action_new.setObjectName(_fromUtf8("action_new"))
        self.action_invert = QtGui.QAction(MainWindow)
        self.action_invert.setObjectName(_fromUtf8("action_invert"))
        self.action_close_terminals = QtGui.QAction(MainWindow)
        self.action_close_terminals.setObjectName(_fromUtf8("action_close_terminals"))
        self.action_save_as_template = QtGui.QAction(MainWindow)
        self.action_save_as_template.setObjectName(_fromUtf8("action_save_as_template"))
        self.action_edit_var_file = QtGui.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(_fromUtf8(":/toolbar/img/var.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_edit_var_file.setIcon(icon4)
        self.action_edit_var_file.setObjectName(_fromUtf8("action_edit_var_file"))
        self.action_edit_config = QtGui.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(_fromUtf8(":/toolbar/img/config.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_edit_config.setIcon(icon5)
        self.action_edit_config.setObjectName(_fromUtf8("action_edit_config"))
        self.action_open_local_dir = QtGui.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(_fromUtf8(":/toolbar/img/directory.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_open_local_dir.setIcon(icon6)
        self.action_open_local_dir.setObjectName(_fromUtf8("action_open_local_dir"))
        self.action_open_local_term = QtGui.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(_fromUtf8(":/toolbar/img/terminal.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_open_local_term.setIcon(icon7)
        self.action_open_local_term.setObjectName(_fromUtf8("action_open_local_term"))
        self.action_restart = QtGui.QAction(MainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(_fromUtf8(":/toolbar/img/reset.png")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_restart.setIcon(icon8)
        self.action_restart.setObjectName(_fromUtf8("action_restart"))
        self.menu_project.addAction(self.action_save)
        self.menu_project.addAction(self.action_exit)
        self.menu_project.addAction(self.action_new)
        self.menu_operation.addAction(self.action_open_terminals)
        self.menu_operation.addAction(self.action_send_move_next)
        self.menu_operation.addAction(self.action_send)
        self.menu_operation.addAction(self.action_close_terminals)
        self.menu_operation.addSeparator()
        self.menu_operation.addAction(self.action_edit_var_file)
        self.menu_operation.addAction(self.action_edit_config)
        self.menu_operation.addAction(self.action_open_local_dir)
        self.menu_operation.addAction(self.action_open_local_term)
        self.menu_help.addAction(self.action_about)
        self.menu_selection.addAction(self.action_select_all)
        self.menu_selection.addAction(self.action_unselect_all)
        self.menu_selection.addAction(self.action_invert)
        self.menu_templates.addAction(self.action_save_as_template)
        self.menu_templates.addSeparator()
        self.menubar.addAction(self.menu_project.menuAction())
        self.menubar.addAction(self.menu_selection.menuAction())
        self.menubar.addAction(self.menu_operation.menuAction())
        self.menubar.addAction(self.menu_templates.menuAction())
        self.menubar.addAction(self.menu_help.menuAction())
        self.toolBar.addAction(self.action_exit)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_new)
        self.toolBar.addAction(self.action_save)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_open_terminals)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.action_edit_var_file)
        self.toolBar.addAction(self.action_edit_config)
        self.toolBar.addAction(self.action_open_local_term)
        self.toolBar.addAction(self.action_open_local_dir)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.listwidget, self.sciscintilla)
        MainWindow.setTabOrder(self.sciscintilla, self.logslistview)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(_translate("MainWindow", "Orquesta", None))
        self.groupbox_terminals.setTitle(_translate("MainWindow", "Terminals", None))
        self.groupbox_cwd.setTitle(_translate("MainWindow", "Logs path", None))
        self.menu_project.setTitle(_translate("MainWindow", "&Project", None))
        self.menu_operation.setTitle(_translate("MainWindow", "&Operations", None))
        self.menu_help.setTitle(_translate("MainWindow", "&Help", None))
        self.menu_selection.setTitle(_translate("MainWindow", "&Selection", None))
        self.menu_templates.setTitle(_translate("MainWindow", "&Templates", None))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar", None))
        self.action_save.setText(_translate("MainWindow", "Save script", None))
        self.action_save.setShortcut(_translate("MainWindow", "Ctrl+S", None))
        self.action_exit.setText(_translate("MainWindow", "Exit", None))
        self.action_exit.setShortcut(_translate("MainWindow", "Ctrl+E", None))
        self.action_select_all.setText(_translate("MainWindow", "&Select all terminals", None))
        self.action_select_all.setShortcut(_translate("MainWindow", "Ctrl+Shift+S", None))
        self.action_unselect_all.setText(_translate("MainWindow", "&Unselect all terminals", None))
        self.action_unselect_all.setShortcut(_translate("MainWindow", "Ctrl+Shift+D", None))
        self.action_about.setText(_translate("MainWindow", "About", None))
        self.action_open_terminals.setText(_translate("MainWindow", "&Open selected terminals", None))
        self.action_open_terminals.setShortcut(_translate("MainWindow", "Ctrl+O", None))
        self.action_send_move_next.setText(_translate("MainWindow", "Execute current line and move next", None))
        self.action_send_move_next.setShortcut(_translate("MainWindow", "F1", None))
        self.action_send.setText(_translate("MainWindow", "Execute current line", None))
        self.action_send.setShortcut(_translate("MainWindow", "F2", None))
        self.action_new.setText(_translate("MainWindow", "New", None))
        self.action_new.setToolTip(_translate("MainWindow", "New project", None))
        self.action_new.setShortcut(_translate("MainWindow", "Ctrl+N", None))
        self.action_invert.setText(_translate("MainWindow", "&Invert selection", None))
        self.action_invert.setToolTip(_translate("MainWindow", "Invert selection", None))
        self.action_invert.setShortcut(_translate("MainWindow", "Ctrl+Shift+I", None))
        self.action_close_terminals.setText(_translate("MainWindow", "Close selected terminals", None))
        self.action_close_terminals.setShortcut(_translate("MainWindow", "Ctrl+Shift+C", None))
        self.action_save_as_template.setText(_translate("MainWindow", "&Save as template", None))
        self.action_edit_var_file.setText(_translate("MainWindow", "Edit var file", None))
        self.action_edit_config.setText(_translate("MainWindow", "Edit config file", None))
        self.action_edit_config.setToolTip(_translate("MainWindow", "Edit config file", None))
        self.action_open_local_dir.setText(_translate("MainWindow", "Open file explorer in logs path", None))
        self.action_open_local_dir.setToolTip(_translate("MainWindow", "Open file explorer in logs path", None))
        self.action_open_local_dir.setShortcut(_translate("MainWindow", "Ctrl+Alt+F", None))
        self.action_open_local_term.setText(_translate("MainWindow", "Open local terminal in current log path", None))
        self.action_open_local_term.setToolTip(_translate("MainWindow", "Open local terminal in current log path", None))
        self.action_open_local_term.setShortcut(_translate("MainWindow", "Ctrl+Alt+T", None))
        self.action_restart.setText(_translate("MainWindow", "_restart", None))
        self.action_restart.setToolTip(_translate("MainWindow", "Restart", None))

from widgets.orsciscintilla import OrSciScintilla
from widgets.orlogslistview import OrLogsListView
from widgets.orlistwidget import OrListWidget
import resources_rc
